name: Test Version or Publish Package

on:
  workflow_dispatch:
    inputs:
      version_tag:
        required: true
        description: The release version
        type: string
        default: v1.0.0
    prerelease:
      required: true
      description: Whether it's a prerelease
      type: boolean
      default: true
  push:
    branches:
      - SRE-221-automation

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  id-token: write
  contents: write
  # contents: read
  attestations: write
  actions: write
  pull-requests: write

jobs:
  provenance:
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v1.10.0
    with:
      run-scripts: "install-pnpm, install-deps, style, nx-build-skip-cache, nx-test-skip-cache, skip-lib-ignore"
      node-version: "20.11.1"

  release:
    needs: [provenance]
    name: Version or Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.5.4
        with:
          token: ${{ secrets.SAI_PAT }}

      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare

      # - name: Download Artifacts 
      #   uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741  # v3.0.0
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef
        with:
          gpg_private_key: ${{ secrets.SVC_GPG_KEY }}
          passphrase: ${{ secrets.SVC_GPG_PASSPHRASE }}
          git_config_global: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          
      - name: Create temp dir
        id: temp-dir
        run: |
          set -euo pipefail

          temp_dir=$(mktemp -d)
          echo "path=${temp_dir}" >>"${GITHUB_OUTPUT}"

      - name: Download tarball
        uses: slsa-framework/slsa-github-generator/.github/actions/secure-download-artifact@934435652996c02a6317092984312602dfaf2a21 # main
        with:
          name: ${{ needs.provenance.outputs.package-download-name }}
          path: "${{ steps.temp-dir.outputs.path }}/${{ needs.provenance.outputs.package-name }}"
          sha256: ${{ needs.provenance.outputs.package-download-sha256 }}

      - name: Download provenance
        uses: slsa-framework/slsa-github-generator/actions/nodejs/secure-attestations-download@0779f7bec68e2bf54a7b0a32bf4763f25ab29702 # v1.6.0
        with:
          name: ${{ needs.provenance.outputs.provenance-download-name }}
          path: "${{ steps.temp-dir.outputs.path }}"
          sha256: ${{ needs.provenance.outputs.provenance-download-sha256 }}

      - name: Unpack the zipped artifact
        run: |
          set -euo pipefail
          cd "${{ steps.temp-dir.outputs.path }}"
          tar -xzvf "${{ needs.provenance.outputs.package-name }}" -C $GITHUB_WORKSPACE --strip-components=1
          cd "$GITHUB_WORKSPACE"; pnpm run install-deps

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1


      # - name: Set version command
      #   id: set-version
      #   run: |
      #     if [ "${{ inputs.prerelease }}" = "true" ]; then
      #       echo "version=pnpm ci:prerelease" >> $GITHUB_ENV
      #     else
      #       echo "version=pnpm ci:version" >> $GITHUB_ENV
      #     fi

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@aba318e9165b45b7948c60273e0b72fce0a64eb9 # v1
        with:
          setupGitUser: false
          version: pnpm ci:prerelease
          title: "chore: Update the version packages"
          publish: pnpm publish --dry-run --no-git-checks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NOT_EXIST_TOKEN }}

      - name: Generate SBOM
        uses: anchore/sbom-action@e8d2a6937ecead383dfe75190d104edd1f9c5751
        with:
          artifact-name: sbom-${{ github.event.repository.name }}-v1.0.0.spdx.json
          output-file: /${{ steps.temp-dir.outputs.path }}/sbom-${{ github.event.repository.name }}-v1.0.0.spdx.json
          upload-artifact: false
          upload-release-assets: false

      - name: Download Artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741  # v3

      - name: Upload attestations SLSA
        # if: steps.changesets.outputs.id != ''
        uses: actions/attest-build-provenance@5e9cb68e95676991667494a6a4e59b8a2f13e1d0
        with:
          subject-path: ${{ needs.provenance.outputs.provenance-download-name }}
          subject-name: "${{ github.event.repository.name }}-v1.0.0"

      - name: Upload attestations SBOM
        # if: steps.changesets.outputs.id != ''
        uses: actions/attest-build-provenance@5e9cb68e95676991667494a6a4e59b8a2f13e1d0
        with:
          subject-path: /${{ steps.temp-dir.outputs.path }}/sbom-${{ github.event.repository.name }}-v1.0.0.spdx.json
